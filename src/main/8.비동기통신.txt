[ 동기식 통신 vs 비동기식 통신 ]
    (동기식)
    1. 데이터 요청을 보내고 응답을 받을 때까지 대기 상태
    2. 응답을 받을 때까지 대기 상태
    3. 순차처리 : HTTP, 파일처리 등등 (일반적인 홈페이지)
    4. 응답을 기다리므로 전체적으로 속도가 느릴 수 있다.
    (비동기식)
    1. 데이터 요청을 보내고 즉시 응답을 받지 않고 응답이 올 때 처리 상태
    2. 응답을 기다리지 않고 다른 작업을 수행할 수 있는 상태
    3. 병렬처리 : 채팅, Node.js 등등 (소셜 홈페이지)
    4. 여러 작업을 동시에 수행하므로 전체적으로 속도가 빠를 수 있다.

    비동기 API : fetch(JS 내장), axios(Node.js) , ajax(jquery) 등등

    ex]
        1. 강호동이 '커피' 3잔 '빵' 1개 '파스타'1개 주문
        2. 유재석이 '커피'1잔 주문
        --> 방법1 : 처리순으로(비동기식) 할건지 / 방법2 : 주문순으로(동기식) 할건지

[ AXIOS ]
    1. 정의 : node.js 기반으로 Promise 함수를 사용하는 라이브러리
    2. 특징
        1] fetch 보다 간결한 문법 제공
        2] 응답 데이터를 자동으로 JSON 변환
        3] 문법
            (*) fetch
            fetch('통신할 경로', {OPTION})
            .then( response => {})
            .catch( error => {})

            (1) 비동기식 통신
            axios.HTTP 메소드명 ('통신할 경로', {BODY}, {OPTION})
            .then( response => {} )
            .catch( error =< {} )

            (2) 동기식 통신
            async () => {
                await axios.HTTP 메소드명 ('통신할 경로', {BODY} , {OPTION})
                    .then( response => {} )
                    .catch( error => {})
            }

            (3)

